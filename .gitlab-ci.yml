stages:
  - build
  - test

variables:
  BUILD_HELPERS_VERSION: 1aac59c8c8c2559448851ca5c6820fcf3a363363
  DRBD9_TESTS_REF: master
  # we have to change the way GitLab CI clones the repository.
  # by default, it is shallow, which gives us a wrong commit count when
  # we do `git rev-list --count origin/master` below.
  GIT_DEPTH: 0
  GIT_STRATEGY: clone
  GIT_SUBMODULE_STRATEGY: normal

.setup-lbbuild:
  before_script:
    - . .gitlab/gitlab-utils.sh
    - drbd_prepare_tools
    - drbd_fetch_lbbuildctl
    - git clone --branch ${DRBD9_TESTS_REF} https://gitlab-ci-token:${CI_JOB_TOKEN}@${CI_SERVER_HOST}/drbd/drbd9-tests.git
    - |
      drbd_utils_build () {
        local version="$1"
        local release="$2"

        dummy-release.sh drbd-utils "$version" "$release" drbd.spec.in
        sed -i "s/^AC_INIT.*/AC_INIT(DRBD, $version, [drbd-dev@lists.linbit.com])/" configure.ac
        git config --global user.email "invalid@linbit"
        git config --global user.name "Dummy"
        git commit -am "CI $version - $release"
        ./autogen.sh
        ./configure --prefix=/usr --localstatedir=/var --sysconfdir=/etc --without-manual
        install /dev/null $(which lbvers.py)
        make debrelease VERSION="$version" FORCE=1
        curl -isSf -u $LINBIT_REGISTRY_USER:$LINBIT_REGISTRY_PASSWORD --upload-file drbd-utils-*.tar.gz $LINBIT_REGISTRY_URL/repository/lbbuild-upstream/

        # Distributions, comma separated.
        # * "mainline" is excluded because the user space components are the same as the base distribution.
        # * rhelX.y is replaced by rhelX.0
        local dists=$(rq -t < drbd9-tests/virter/vms.toml | jq -r '[
          .vms[].metadata.BuildDistribution
          | select(. != "mainline")
          | sub("rhel(?<major>\\d)\\.\\d"; "rhel\(.major).0")
        ] | unique | join(",")')

        lbbuildctl build drbd-utils --arch amd64 --ci -v "$DRBD_UTILS_VERSION" \
          -e LINBIT_REGISTRY_USER=$LINBIT_REGISTRY_USER \
          -e LINBIT_REGISTRY_PASSWORD=$LINBIT_REGISTRY_PASSWORD \
          -e LINBIT_REGISTRY_URL=$LINBIT_REGISTRY_URL \
          -d $dists
      }

# rules clause determining whether to build
.rules-build:
  rules:
    - if: $CI_MERGE_REQUEST_ID
    - if: $CI_COMMIT_BRANCH == 'master'

build:
  stage: build
  extends: [ .rules-build, .setup-lbbuild ]
  image: $LINBIT_DOCKER_REGISTRY/build-helpers:$BUILD_HELPERS_VERSION
  cache:
    paths:
      - download
  script:
    - if [ "$CI_COMMIT_BRANCH" = master ]; then
    -   DRBD_UTILS_VERSION=9.0.0.latest
    -   DRBD_UTILS_RELEASE=$(git rev-list --count origin/master)
    - else
    -   DRBD_UTILS_VERSION=9.0.0.$CI_COMMIT_SHA
    -   DRBD_UTILS_RELEASE=1
    - fi
    - drbd_utils_build $DRBD_UTILS_VERSION $DRBD_UTILS_RELEASE

drbd-tests:
  stage: test
  rules:
    - if: $CI_MERGE_REQUEST_ID
  tags:
    - libvirt
  cache:
    paths:
      - download
  before_script:
    - git clone --branch ${DRBD9_TESTS_REF} https://gitlab-ci-token:${CI_JOB_TOKEN}@${CI_SERVER_HOST}/drbd/drbd9-tests.git
  script:
    - . drbd9-tests/virter/version.env
    - curl -sSfL -u gitlab-ci-token:$CI_JOB_TOKEN $CI_SERVER_URL/linbit/build-helpers/-/archive/$BUILD_HELPERS_VERSION/ignored.tar.gz | tar -xvzf -
    - mv build-helpers-* build-helpers
    - . build-helpers/gitlab-utils.sh
    - |
      ci_prepare_tools
      ci_fetch_rq
      ci_fetch_binary virter virter-$VIRTER_VERSION https://github.com/LINBIT/virter/releases/download/$VIRTER_VERSION/virter-linux-amd64
      ci_fetch_binary vmshed vmshed-$VMSHED_VERSION https://github.com/LINBIT/vmshed/releases/download/$VMSHED_VERSION/vmshed-linux-amd64
    - export DRBD_TEST_DOCKER_IMAGE=$LINBIT_DOCKER_REGISTRY/drbd9-tests:latest
    - docker image pull $DRBD_TEST_DOCKER_IMAGE
    - |
      export DRBD_VERSION=9.1.0.latest
      export DRBD_UTILS_VERSION=9.0.0.$CI_COMMIT_SHA-1
      cd drbd9-tests
      ./virter/run-test.sh --out-dir=../tests-out
  dependencies:
    - build
  artifacts:
    # provide a convenient name so that the downloaded artifacts can be identified
    name: $CI_PROJECT_NAME-$CI_JOB_ID
    paths:
      - tests-out/
    when: always
    reports:
      junit: tests-out/test-results/*.xml

